{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","apiConfig.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","apiUrls","window","location","hostname","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07414b79.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return <button onClick={onClick} style={{ backgroundColor: color }}className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n    return (\r\n        <header \r\n            className='header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close' : 'Add'} \r\n                onClick={onAdd} \r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS is JS\r\n// const headingStyle = {\r\n//    color: 'red',\r\n//    backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n            className={`task ${task.reminder ? 'reminder' : ''}`} \r\n            onDoubleClick={() => onToggle(task.id)}\r\n        >\r\n            <h3>\r\n                {task.text}{' '} \r\n                <FaTimes \r\n                    style={{ color: 'red', cursor: 'pointer' }} \r\n                    onClick={() => onDelete(task.id)} \r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n        \r\n    return (\r\n        <>\r\n           {tasks.map((task) => (\r\n               <Task key={task.id} task={task} onDelete={onDelete}\r\n               onToggle={onToggle} />\r\n           ))} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form \r\n            className='add-form'\r\n            onSubmit={onSubmit}>\r\n            <div \r\n                className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => \r\n                        setText(e.target.value)\r\n                    }\r\n                />\r\n            </div>\r\n            <div \r\n                className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Day & Time'\r\n                    value={day}\r\n                    onChange={(e) => \r\n                        setDay(e.target.value)\r\n                    }\r\n                />\r\n            </div>\r\n            <div \r\n                className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type='checkbox'\r\n                    checked={reminder} \r\n                    value={reminder}\r\n                    onChange={(e) => \r\n                        setReminder(e.currentTarget.checked)\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                className='btn btn-block' \r\n                type='submit' \r\n                value='Save Task' \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://task-tracker-back.herokuapp.com',\r\n  development: 'http://localhost:4741'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl","import { useState } from 'react'\nimport axios from \"axios\"\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { indexTasks } from './api/tasks'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n        \n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    }\n])\n\n// Add Task\nconst addTask = (task) => {\n  // This id line is only used until I connect to backend\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(\n    tasks.filter((task) => task.id !== id\n    )\n  )\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n      task.id === id ? { ...task, reminder: \n      !task.reminder } : task\n    )\n  )\n}\n\n\n  return (\n    <div \n      className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask\n        onAdd={addTask}\n      />}\n      {tasks.length > 0 ? (\n        <Tasks \n          tasks={tasks} \n          onDelete={deleteTask} \n          onToggle={toggleReminder} \n        />\n       ) : (\n         'No Tasks To Show'\n        )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}